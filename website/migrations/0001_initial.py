# Generated by Django 2.2.7 on 2019-11-06 01:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patient_ui', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='DiseaseMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=150)),
            ],
            options={
                'db_table': 'disease_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RiskFactorMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=150)),
            ],
            options={
                'db_table': 'risk_factor_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SymptomMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=150)),
            ],
            options={
                'db_table': 'symptom_master',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(default='F', max_length=1)),
                ('is_married', models.BooleanField(default=False)),
                ('about', models.TextField(blank=True, null=True)),
                ('auth_user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='patient_ui.AuthUser')),
            ],
            options={
                'db_table': 'patient',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DiseaseSymptomMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='website.DiseaseMaster')),
                ('symptom', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='website.SymptomMaster')),
            ],
            options={
                'db_table': 'disease_symptom_mapping',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DiseaseRiskFactorMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='website.DiseaseMaster')),
                ('risk_factor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='website.RiskFactorMaster')),
            ],
            options={
                'db_table': 'disease_risk_factor_mapping',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DiseaseInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosed_on', models.DateField(blank=True, null=True)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='website.DiseaseMaster')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='website.Patient')),
            ],
            options={
                'db_table': 'disease_info',
                'managed': True,
            },
        ),
    ]
